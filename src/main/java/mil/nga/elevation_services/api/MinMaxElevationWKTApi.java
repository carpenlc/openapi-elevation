/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package mil.nga.elevation_services.api;

import mil.nga.elevation_services.model.Error;
import mil.nga.elevation_services.model.MinMaxElevationQueryWKT;
import mil.nga.elevation_services.model.MinMaxElevationResponse;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-04-07T08:48:31.266-05:00[America/Chicago]")

@Validated
@Api(value = "MinMaxElevationWKT", description = "the MinMaxElevationWKT API")
public interface MinMaxElevationWKTApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /MinMaxElevationWKT : Determine the minium and maximum elevation height values within an area defined by a well known text (WKT) String.
     *
     * @param wkt A well known text String. (required)
     * @param heightType The output units for the elevation height data. (optional, default to METERS)
     * @param referenceEllipsoid The Earth model reference (geoid or ellipsoid) the height is associated with (optional, default to EGM96)
     * @param source The source DEM type to use for calculating the elevation height data. (optional, default to DTED0)
     * @param operation This parameter is no longer used. (optional)
     * @return The minimum and maximum elevation values within the user-specified WKT String. (status code 200)
     *         or unexpected error (status code 200)
     */
    @ApiOperation(value = "Determine the minium and maximum elevation height values within an area defined by a well known text (WKT) String.", nickname = "getMinMaxElevationWKTGET", notes = "", response = MinMaxElevationResponse.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The minimum and maximum elevation values within the user-specified WKT String.", response = MinMaxElevationResponse.class),
        @ApiResponse(code = 200, message = "unexpected error", response = Error.class) })
    @RequestMapping(value = "/MinMaxElevationWKT",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Object> getMinMaxElevationWKTGET(@NotNull @ApiParam(value = "A well known text String.", required = true) @Valid @RequestParam(value = "wkt", required = true) String wkt,@ApiParam(value = "The output units for the elevation height data.", allowableValues = "FEET, METERS", defaultValue = "METERS") @Valid @RequestParam(value = "heightType", required = false, defaultValue="METERS") String heightType,@ApiParam(value = "The Earth model reference (geoid or ellipsoid) the height is associated with", allowableValues = "EGM96, WGS84", defaultValue = "EGM96") @Valid @RequestParam(value = "referenceEllipsoid", required = false, defaultValue="EGM96") String referenceEllipsoid,@ApiParam(value = "The source DEM type to use for calculating the elevation height data.", allowableValues = "DTED2, DTED1, DTED0, SRTM2, SRTM1, SRTM2F, SRTM1F, BEST", defaultValue = "DTED0") @Valid @RequestParam(value = "source", required = false, defaultValue="DTED0") String source,@ApiParam(value = "This parameter is no longer used.") @Valid @RequestParam(value = "operation", required = false) String operation) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"security\" : { \"ownerProducer\" : \"ownerProducer\", \"classification\" : \"classification\" }, \"minElevation\" : { \"elevation\" : 0, \"coordinate\" : { \"lon\" : 7.061401241503109, \"lat\" : 2.3021358869347655 }, \"absHorizontalAccuracy\" : 6, \"relHorizontalAccuracy\" : 5, \"absVerticalAccuracy\" : 1, \"relVerticalAccuracy\" : 5 }, \"maxElevation\" : { \"elevation\" : 0, \"coordinate\" : { \"lon\" : 7.061401241503109, \"lat\" : 2.3021358869347655 }, \"absHorizontalAccuracy\" : 6, \"relHorizontalAccuracy\" : 5, \"absVerticalAccuracy\" : 1, \"relVerticalAccuracy\" : 5 } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /MinMaxElevationWKT : Determine the minium and maximum elevation height values within an area defined by a well known text (WKT) String.
     *
     * @param minMaxElevationQueryWKT A well known text (required)
     * @return The minimum and maximum elevation values. (status code 200)
     *         or unexpected error (status code 200)
     */
    @ApiOperation(value = "Determine the minium and maximum elevation height values within an area defined by a well known text (WKT) String.", nickname = "getMinMaxElevationWKTPOST", notes = "", response = MinMaxElevationResponse.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The minimum and maximum elevation values.", response = MinMaxElevationResponse.class),
        @ApiResponse(code = 200, message = "unexpected error", response = Error.class) })
    @RequestMapping(value = "/MinMaxElevationWKT",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<Object> getMinMaxElevationWKTPOST(@ApiParam(value = "A well known text" ,required=true )  @Valid @RequestBody MinMaxElevationQueryWKT minMaxElevationQueryWKT) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"security\" : { \"ownerProducer\" : \"ownerProducer\", \"classification\" : \"classification\" }, \"minElevation\" : { \"elevation\" : 0, \"coordinate\" : { \"lon\" : 7.061401241503109, \"lat\" : 2.3021358869347655 }, \"absHorizontalAccuracy\" : 6, \"relHorizontalAccuracy\" : 5, \"absVerticalAccuracy\" : 1, \"relVerticalAccuracy\" : 5 }, \"maxElevation\" : { \"elevation\" : 0, \"coordinate\" : { \"lon\" : 7.061401241503109, \"lat\" : 2.3021358869347655 }, \"absHorizontalAccuracy\" : 6, \"relHorizontalAccuracy\" : 5, \"absVerticalAccuracy\" : 1, \"relVerticalAccuracy\" : 5 } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
